/*
 * This file is generated by jOOQ.
*/
package de.dangoe.freda.jooq.generated.public.tables


import de.dangoe.freda.jooq.generated.public.Keys
import de.dangoe.freda.jooq.generated.public.Public
import de.dangoe.freda.jooq.generated.public.tables.records.UsersRecord

import java.lang.Class
import java.lang.Long
import java.lang.String
import java.sql.Timestamp
import java.util.Arrays
import java.util.List

import javax.annotation.Generated

import org.jooq.Field
import org.jooq.Identity
import org.jooq.Schema
import org.jooq.Table
import org.jooq.TableField
import org.jooq.UniqueKey
import org.jooq.impl.TableImpl

import scala.Array


object Users {

  /**
   * The reference instance of <code>PUBLIC.USERS</code>
   */
  val USERS = new Users
}

/**
 * This class is generated by jOOQ.
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.9.4"
  ),
  comments = "This class is generated by jOOQ"
)
class Users(alias : String, aliased : Table[UsersRecord], parameters : Array[ Field[_] ]) extends TableImpl[UsersRecord](alias, Public.PUBLIC, aliased, parameters, "") {

  /**
   * The class holding records for this type
   */
  override def getRecordType : Class[UsersRecord] = {
    classOf[UsersRecord]
  }

  /**
   * The column <code>PUBLIC.USERS.ID</code>.
   */
  val ID : TableField[UsersRecord, Long] = createField("ID", org.jooq.impl.SQLDataType.BIGINT.nullable(false), "")

  /**
   * The column <code>PUBLIC.USERS.NAME</code>.
   */
  val NAME : TableField[UsersRecord, String] = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(64), "")

  /**
   * The column <code>PUBLIC.USERS.CREATED_AT</code>.
   */
  val CREATED_AT : TableField[UsersRecord, Timestamp] = createField("CREATED_AT", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), "")

  /**
   * Create a <code>PUBLIC.USERS</code> table reference
   */
  def this() = {
    this("USERS", null, null)
  }

  /**
   * Create an aliased <code>PUBLIC.USERS</code> table reference
   */
  def this(alias : String) = {
    this(alias, de.dangoe.freda.jooq.generated.public.tables.Users.USERS, null)
  }

  private def this(alias : String, aliased : Table[UsersRecord]) = {
    this(alias, aliased, null)
  }

  override def getSchema : Schema = Public.PUBLIC

  override def getIdentity : Identity[UsersRecord, Long] = {
    Keys.IDENTITY_USERS
  }

  override def getPrimaryKey : UniqueKey[UsersRecord] = {
    Keys.SYS_PK_10092
  }

  override def getKeys : List[ UniqueKey[UsersRecord] ] = {
    return Arrays.asList[ UniqueKey[UsersRecord] ](Keys.SYS_PK_10092)
  }

  override def as(alias : String) : Users = {
    new Users(alias, this)
  }

  /**
   * Rename this table
   */
  override def rename(name : String) : Users = {
    new Users(name, null)
  }
}
