/*
 * This file is generated by jOOQ.
*/
package de.dangoe.freda.jooq.generated.public


import de.dangoe.freda.jooq.generated.public.tables.Accounts
import de.dangoe.freda.jooq.generated.public.tables.Users
import de.dangoe.freda.jooq.generated.public.tables.records.AccountsRecord
import de.dangoe.freda.jooq.generated.public.tables.records.UsersRecord

import java.lang.Long

import javax.annotation.Generated

import org.jooq.Identity
import org.jooq.UniqueKey
import org.jooq.impl.AbstractKeys

import scala.Array


/**
 * A class modelling foreign key relationships between tables of the <code>PUBLIC</code> 
 * schema
 */
@Generated(
  value = Array(
    "http://www.jooq.org",
    "jOOQ version:3.9.4"
  ),
  comments = "This class is generated by jOOQ"
)
object Keys {

  // -------------------------------------------------------------------------
  // IDENTITY definitions
  // -------------------------------------------------------------------------

  val IDENTITY_USERS = Identities0.IDENTITY_USERS

  // -------------------------------------------------------------------------
  // UNIQUE and PRIMARY KEY definitions
  // -------------------------------------------------------------------------

  val SYS_PK_10096 = UniqueKeys0.SYS_PK_10096
  val SYS_PK_10092 = UniqueKeys0.SYS_PK_10092

  // -------------------------------------------------------------------------
  // FOREIGN KEY definitions
  // -------------------------------------------------------------------------


  // -------------------------------------------------------------------------
  // [#1459] distribute members to avoid static initialisers > 64kb
  // -------------------------------------------------------------------------

  private object Identities0 extends AbstractKeys {
    val IDENTITY_USERS : Identity[UsersRecord, Long] = AbstractKeys.createIdentity(Users.USERS, Users.USERS.ID)
  }

  private object UniqueKeys0 extends AbstractKeys {
    val SYS_PK_10096 : UniqueKey[AccountsRecord] = AbstractKeys.createUniqueKey(Accounts.ACCOUNTS, "SYS_PK_10096", Accounts.ACCOUNTS.USER)
    val SYS_PK_10092 : UniqueKey[UsersRecord] = AbstractKeys.createUniqueKey(Users.USERS, "SYS_PK_10092", Users.USERS.ID)
  }
}
